pipeline {
    agent any
    environment {
        DATABASE_URI = credentials("DATABASE_URI")
        DOCKER_LOGIN = credentials("DOCKER_LOGIN")
        rebuild_db = 'true'
        install_docker = 'true' 
    }
    stages {
        stage('Test'){
            steps{
                sh 'bash jenkins/test.sh'
            }
        }
        stage('Docker'){
            steps {
                script{
                    if (env.install_docker == 'true'){
                        sh 'bash jenkins/docker.sh'
                    }
                }
            }
        }
        stage('Build'){
            steps {
                sh 'docker-compose build --parallel -d'
            }
        }
        stage('Push Docker Images'){
            steps {
                sh 'docker push wdennington/5000_templates:latest'
                sh 'docker push wdennington/5001_name_class:latest'
                sh 'docker push wdennington/5002_stats:latest'
                sh 'docker push wdennington/5003_character:latest'
            }
        }
        stage('Configuration') {
            steps {
                sh 'sh ansible-playbook -i configure-swarm/inventory.yaml configure-swarm/playbook.yaml'
            }
        }
    }
    post {
        always {
            junit 'junit.xml'
            cobertura coberturaReportFile: 'coverage.xml', failNoReports:false
        }
    }
}